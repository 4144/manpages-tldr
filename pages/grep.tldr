.\" Automatically generated by Pandoc 1.16.0.2
.\"
.TH "grep" "0" "2016\-06\-27" "manpages\-tldr manuals" ""
.hy
.SH NAME
.PP
grep \- Matches patterns in input text.
Supports simple patterns and regular expressions.
.SH EXAMPLES
.PP
Search for an exact string:
.IP
.nf
\f[C]
grep\ {{search_string}}\ {{file_path}}
\f[]
.fi
.PP
Search in case\-insensitive mode:
.IP
.nf
\f[C]
grep\ \-i\ {{search_string}}\ {{path/to/file}}
\f[]
.fi
.PP
Search recursively (ignoring non\-text files) in current directory for
an exact string:
.IP
.nf
\f[C]
grep\ \-rI\ {{search_string}}\ .
\f[]
.fi
.PP
Use a regular expression (\f[C]\-E\f[] for extended regex, supporting
\f[C]?\f[], \f[C]+\f[], \f[C]{}\f[], \f[C]()\f[] and \f[C]|\f[]):
.IP
.nf
\f[C]
grep\ \-e\ {{^regex$}}\ {{path/to/file}}
\f[]
.fi
.PP
Print 3 lines of context around each match:
.IP
.nf
\f[C]
grep\ \-C\ 3\ {{search_string}}\ {{path/to/file}}
\f[]
.fi
.PP
Print the count of matches instead of the matching text:
.IP
.nf
\f[C]
grep\ \-c\ {{search_string}}\ {{path/to/file}}
\f[]
.fi
.PP
Print line number for each match:
.IP
.nf
\f[C]
grep\ \-n\ {{search_string}}\ {{path/to/file}}
\f[]
.fi
.PP
Print file names with matches:
.IP
.nf
\f[C]
grep\ \-l\ {{search_string}}\ {{path/to/file}}
\f[]
.fi
.PP
Use the standard input instead of a file:
.IP
.nf
\f[C]
cat\ {{path/to/file}}\ |\ grep\ {{search_string}}
\f[]
.fi
.PP
Invert match for excluding specific strings:
.IP
.nf
\f[C]
grep\ \-v\ {{search_string}}
\f[]
.fi
.SH AUTHORS
Waldir Pimenta, Waldir Pimenta, Ayakashi, Waldir Pimenta, Waldir
Pimenta, Ahmet Kun, Ruben Vereecken, Antonio, lord63, André König, André
König, rprieto.
